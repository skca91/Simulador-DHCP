
package Cliente;
import java.io.IOException;
import java.net.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
/**
 *
 * @author Stephanie Katherine Correa Alc√°ntara C.I. 19.598.574
 */
public class Cliente extends javax.swing.JFrame {

    /** Creates new form Cliente */
    
    DatagramPacket entrada;
    DatagramSocket socketEntrada;
    ClienteUDP clienteUDP[];
    byte buffer[];
    int cantBytes, numClientes, i, num;

    public Cliente() throws SocketException {
        initComponents();
        cantBytes = 512;
        numClientes = 100;
        i = 1;
        num = 1;
        buffer = new byte[cantBytes];
        socketEntrada = new DatagramSocket(6800);
        clienteUDP = new ClienteUDP[numClientes];
    }

    public ClienteUDP[] getConexionUDP() {
        return clienteUDP;
    }

    public void setConexionUDP(ClienteUDP[] conexionUDP) {
        this.clienteUDP = conexionUDP;
    }

    public int Buscar_MAC(String mensaje) throws IOException {
        int i = 1;
        while (this.clienteUDP[i] != null) {
            if (this.clienteUDP[i].getMAC().compareTo(mensaje) == 0) {
                return i;
            }
            i++;
        }
        return 0;
    }

    private void Recibir() {
        new Thread(new Runnable() {

            public void run() {
                while (true) {
                    entrada = new DatagramPacket(buffer, cantBytes);
                    try {
                        System.out.println("Router Escuchando");
                        socketEntrada.receive(entrada);
                        String data = new String(entrada.getData());
                        System.out.println("Data "+data);
                        String datos[] = data.split("-");
                        System.out.println("NUM "+datos[3]);
                        num = Integer.parseInt(datos[3]);
                        clienteUDP[num].Recibir(entrada);
                      
                        
                    } catch (IOException ex) {
                        System.out.println("Error - " + ex.toString());
                    }
                }
               
            }
        }).start();
        
    }
                                       

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    Cliente router = new Cliente();
                    router.setVisible(true);
                    router.Recibir();
                } catch (SocketException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        Mac = new javax.swing.JTextField();
        Solicitar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Solicitar");
        setAlwaysOnTop(true);
        setBounds(new java.awt.Rectangle(30, 50, 50, 50));
        setResizable(false);

        jLabel2.setText("MAC");

        Solicitar.setText("Solicitar");
        Solicitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SolicitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Solicitar)
                    .addComponent(Mac, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(Mac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(Solicitar)
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SolicitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SolicitarActionPerformed
        // TODO add your handling code here:
         if (Mac.getText().compareTo("") == 0) {
            JOptionPane.showMessageDialog(this, "Debe ingresar todos los campos para efectuar la conexion");
        } else {
            try {
                int k = Buscar_MAC(Mac.getText());
                if (k == 0) {
                    clienteUDP[i] = new ClienteUDP();
                    clienteUDP[i].setMAC(Mac.getText());
                    clienteUDP[i].setId(i);
                    clienteUDP[i].setEstado(1);
                    i++;
                }else if(clienteUDP[k].getEstado()==0){
                    clienteUDP[k].setVisible(true);
                    clienteUDP[k].setEstado(1);
                }
            } catch (IOException ex) {
                Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_SolicitarActionPerformed

 
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Mac;
    private javax.swing.JButton Solicitar;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
